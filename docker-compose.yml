version: '3'
services:
  api-gateway:
    build:
      context: ./api_gateway_service/
      dockerfile: Dockerfile
    container_name: api-gateway-container
    networks:
      - microservice-network
    ports:
      - "3000:3000"
    depends_on:
      user-microservice:
        condition: service_healthy
      booking-microservice:
        condition: service_healthy
      transaction-microservice:
        condition: service_healthy
    healthcheck:
      test: curl --fail http://localhost:3000/health-check || exit 1
      interval: 30s
      retries: 5
      start_period: 20s
      timeout: 10s

  user-db:
    build:
      context: ./user_service/user_db/
      dockerfile: Dockerfile
    container_name: user-mysql-container
    networks:
      - user-service-db-network
    ports:
      - "3306"
    healthcheck:
      test: ["CMD", "mysqladmin ping --password=$(echo $MYSQL_ROOT_PASSWORD) 2>/dev/null"]
      timeout: 20s
      retries: 10

  user-microservice:
    build:
      context: ./user_service/
      dockerfile: Dockerfile
    container_name: user-microservice-container
    networks:
      - user-service-db-network
      - microservice-network
    ports:
      - "3001"
    depends_on:
      - user-db
    healthcheck:
      test: curl --fail http://localhost:3001/health-check || exit 1
      interval: 30s
      retries: 5
      start_period: 20s
      timeout: 10s
    #volumes:
    #- ./user_service:/usr/src/app
  
  booking-db:
    build:
      context: ./booking_service/booking_db/
      dockerfile: Dockerfile
    container_name: booking-mysql-container
    ports:
      - "3306"
    networks:
      - booking-service-db-network
    healthcheck:
      test: ["CMD", "mysqladmin ping --password=$(echo $MYSQL_ROOT_PASSWORD)"]
      timeout: 20s
      retries: 10

  booking-microservice:
    build:
      context: ./booking_service/
      dockerfile: Dockerfile
    container_name: booking-microservice-container
    networks:
      - booking-service-db-network
      - microservice-network
    ports:
      - "3002"
    depends_on:
      - booking-db
    healthcheck:
      test: curl --fail http://localhost:3002/health-check || exit 1
      interval: 30s
      retries: 5
      start_period: 20s
      timeout: 10s
    # volumes:
    #   - ./booking_service:/usr/src/app

  transaction-db:
    build:
      context: ./transaction_service/transaction_db/
      dockerfile: Dockerfile
    container_name: transaction-mysql-container
    ports:
      - "3306"
    networks:
      - transaction-service-db-network
    healthcheck:
      test: ["CMD", "mysqladmin ping --password=$(echo $MYSQL_ROOT_PASSWORD) 2>/dev/null"]
      timeout: 20s
      retries: 10

  transaction-microservice:
    build:
      context: ./transaction_service/
      dockerfile: Dockerfile
    container_name: transaction-microservice-container
    networks:
      - transaction-service-db-network
      - microservice-network
    ports:
      - "3003"
    depends_on:
      - transaction-db
    healthcheck:
      test: curl --fail http://localhost:3003/health-check || exit 1
      interval: 30s
      retries: 5
      start_period: 20s
      timeout: 10s
    #volumes:
      #- ./transaction_service:/usr/src/app

networks:
  microservice-network:
  user-service-db-network:
  booking-service-db-network:
  transaction-service-db-network:
